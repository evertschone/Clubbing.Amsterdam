FUNCTIONAL:

    favorite star.

    Add loading icons (during: search, sort, open app, open detailview)

    filter options on main view> toggle or open sidemenu?

    add filters for:  -party duration -music_genres -venue_size
        X -social_stats(attendance/gender/popularity/internationalcrowd) -distance(from set location?) - -price -is_festival?

    user: post event to wall, update attending status, share event with friends, like app on fb )

    keep the FB logged-in status
    push notifications option when a filtered party is near

    event detail:
    -add to favs button
    -google maps link
    -youtube link for artists
    -add to calendar link
    -share button

    detect good width for sidepanels on tablet


        Done:

        X set max width for side panels, so that tablet devices can have them set to be always visibkle. and maybe find a better way to apply the sizes then @ onDevice ready, (maybe onScreenOn, PreDOMRender).
        X sorting options ( change sort  input icon to seperate button to reverse sorting)
        X Add sorting by Price and distance.
        X (proper party info in list:  name, time, location (+distance), top 4 genres, top 4 lineup, nr attending, )
        X implement geo-location
        X YES > >> better to remove the swipe to fav feature on events and make whole list swipeable
        X create fav.list from item.starred
        X facebook API functions. ( non-user:   update fb attendees? SOLVED: USE APP ID/SECRET.
        X write script to refactor the scraped partflock jsons to "partyID" : { "prop1" : a , "prop2": b, etc. }
        X>> Solved: Used lookup map, for index.
        X decide if needed? >> button with modal popup for visible fields
        X filter out events with too much missing data? NO.. not needed, filters already handle this


UI / UX:

    -listview: better place for venue text. (or maybe expandable items, 2 finger zoom gesture?)
    -listview: add fav buttons, longpress functions?
    -add app settings (use geo location, facebook login, performance options? etc.)
    -add swipe to go back on detail view. (instead of swipe for filters., keep swipe left for favs.)
    -maybe add option for tab bar instead of swipe, for shitty devices. (or place the header bar at the bottom for easier reach.)
    -if non-standard timezone, notify that the times shown are those of their device's timezone, not Dutch time.
    -change colors, (sass)

        Done:

        X sidemenus: swipe to close? (= bad choise as it fucks with range sliders.)
        X remove filter button when in detail view.
        X show filter button and remove back button when in list view


LOCAL DATABASE:

    add DB for user settings and fav list.
    >> functions: add fav.id, remove fav.id, update app setting defaults, update last filters

        Done:

        X use pouchDB for json storage
        X set up to sync with CouchDB API


BUGS:

    ratio filter should take fbMFRatioN into account,
    events that have been filtered, because of missing data, stay filtered even after the filter is toggled off??
        >> eg. set 4km. then toggle priceOperator on and off, 170 before 140 after??

    Better Error Catching in the API especially, ( probably keep learning to write tests with Jasmine or Mocha untill next project, adding it now will be a huge bitch.)
        >> read API section for some ideas

    short button press sometimes triggers button twice. (fixed ?? No)
        >> theory, has to do with the sortOrder != sortOrder call, of which, when using 100% cpu, the keyUpEvent gets delayed, causing it to be called twice. (find a way to fix this, $timeout() for sorting??).

    speed up sorting and the inline filters, real dates,
        X cheapest price, X

    close keyboard with searh key, ( install corrdova keyboard plugin,)
        >> ? return key event not called in main search field, and also needs function to hide keyboard on return ?

    - fix sometimes too thick border between listitems,
        >>  possible cause: item height = indivisible by 2, causing jumps at half pixels??
        or
        the nested 'a' element to keep items clickable with bind once (try to remove its border, also does the 'track as' directive make these unnecessary?? )


        Done:

        X only show distance when theres a gps location. (NaN)
        X keep the scroll position on back button, (weird problem, it's not the use of a non default scrolldelegate it seems. and if the app loads while in the detail view the scroll position is remembered, so it's likely a problem with the history stack. (or the lack thereoff), possible solutions: load the app on another nested view so the history is preserved when switching from there to the listview and to the details view, (try this and find a way so test the history stack for issues.) )
        X swipe threshold for showing the side menu bugged? (nightly)
        X fix missing keyboard for text input on sidebar
        X (node) warning: possible EventEmitter memory leak detected.  reactToChanges @ services.js:223 (FIXED> pouch db link was not created in the main controller, this also reduced the large number of $scope.apply()/digest() calls and \/)
        X dont rerender the eventlist DOM when coming back from the home view. + dont reset filters.
        X remove the left sidebar button in detail view, ( requires edit of ionic source, in the 'enable-menu-with-back-views' function try to make it selective of the sidemenu it is called upon. (or if all else fails hardcode the selector.)
            >> maybe use a tab-bar for the back buttons. ( now FIxed using CSS, and conditional inline CSS, works ok, but could try to find a more elegant solution. )




OPTIMIZE / PERFORMANCE:

    -dont update filters in main view until closing sidepanel ( intermediate filtervars in sidepanel, use these for local lenght filter, then populate watchvars on submit. )
    -only use 1 listener for the location check, and bind all distance fields after that one returns true.
    -remove sliding animations between views (or add setting, also for scroll).
    -check where, 'pure' js can be used instead of angular. (to minimize bindings).
    -cache images in background on homepage, and keep cached for next session
    -test if material design for ionic is performant
    -minimize animating html elements?
    - periodically update filtereditems? so it's in sync with $scope events? (watcher should already do this)

    x add dates to API db or use bind once for list( except for favs? )
    x Limit DOM filters (eg. the time render filter gets called 2 times for each time. so 4 times per event for each scope digest !!!) Instead apply filters in the controller before adding to the view. (or avoid the filter, store data pre-filtered)
    x Use bind-once where possible.


        Done:

        X why so many scope digests and sort updates at startup?
        X delay database changed check until after DOM is rendered.
        X (doesnt work)> consider caching the ng-repeat for the full list of items, and using a refresher function to pull the list again. (probably hard to keep databindings intact and still use the filter and sort functions  when using this method.)
        X let the search box 2 way binding, only kick in after x secs not typing. and on lose focus.
        X convert the partyflock RSS to json, en drop the unused data.


API:

    get the node server running, fix openshift port errors, or maybe use another server (are openshift API's always public?).

    maybe change the scraping to use a cronjob instead of an internal stetimeout.

    write seperate API for data reformatting, (adding new database fields based on existing data. eg. to add plain text dates.)

    use user auth in scraper for events that are not public. (use fb API to get user access token, (needs user interaction) or request my long lived token and hardcode in the app every 60 days. (prob. not that secure)? )

    get facebook location data, (+ link for location) to cross reference, add corrected/missing data.
        >> add scraper logic for using facebook data if contradicting lat/long. (eg. for https://partyflock.nl/party/289438:Watervrees)

    get regular venue events, for missing fb links.
    rescrape all facebook every x hours

    add diagnostics if css selectors have changed, or a field does not get poplulated anymore (maybe just use a few known events which are known to contain all possible data as a sanity check). and find a way to alert me if they're not. (check for simple node mailer, or a lib for an alert API).

    maybe cache pictures of age restricted events in the DB, so fb login is not needed for those

    feature: add popularity, by number of new attendees / time between last check. highest attending increase most popular?

        Done:
        X get county codes (flaggethes) ipv namen
        x add normalized dates for quick display in list.
        X add normalized locations for " "
        X Create webscraper
        X refactor scraping results into well parsable json for CouchDB
        X Set up CouchDB on server.
        X add the rss for locations outside amsterdam ( run scraper for array of rss URLs. )


usefull commands:

start adhoc wifi:
    netsh wlan set hostednetwork mode=allow ssid=adhoc1 key=12341234
    netsh wlan start hostednetwork
    (disable enable device if failed.)
